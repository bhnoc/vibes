{"version":3,"file":"reconciler.js","sources":["../../src/core/reconciler.ts"],"sourcesContent":["import packageData from '../../package.json' with { type: 'json' };\nimport { afterActiveInstanceBlur } from '../helpers/afterActiveInstanceBlur';\nimport { appendChild } from '../helpers/appendChild';\nimport { beforeActiveInstanceBlur } from '../helpers/beforeActiveInstanceBlur';\nimport { clearContainer } from '../helpers/clearContainer';\nimport { commitUpdate } from '../helpers/commitUpdate';\nimport { createInstance } from '../helpers/createInstance';\nimport { createReconciler } from '../helpers/createReconciler';\nimport { createTextInstance } from '../helpers/createTextInstance';\nimport { detachDeletedInstance } from '../helpers/detachDeletedInstance';\nimport { finalizeInitialChildren } from '../helpers/finalizeInitialChildren';\nimport { getChildHostContext } from '../helpers/getChildHostContext';\nimport { getCurrentUpdatePriority } from '../helpers/getCurrentUpdatePriority';\nimport { getInstanceFromNode } from '../helpers/getInstanceFromNode';\nimport { getInstanceFromScope } from '../helpers/getInstanceFromScope';\nimport { getPublicInstance } from '../helpers/getPublicInstance';\nimport { getRootHostContext } from '../helpers/getRootHostContext';\nimport { hideInstance } from '../helpers/hideInstance';\nimport { hideTextInstance } from '../helpers/hideTextInstance';\nimport { insertBefore } from '../helpers/insertBefore';\nimport { maySuspendCommit } from '../helpers/maySuspendCommit';\nimport { preloadInstance } from '../helpers/preloadInstance';\nimport { prepareForCommit } from '../helpers/prepareForCommit';\nimport { preparePortalMount } from '../helpers/preparePortalMount';\nimport { prepareScopeUpdate } from '../helpers/prepareScopeUpdate';\nimport { removeChild } from '../helpers/removeChild';\nimport { requestPostPaintCallback } from '../helpers/requestPostPaintCallback';\nimport { resetAfterCommit } from '../helpers/resetAfterCommit';\nimport { resetFormInstance } from '../helpers/resetFormInstance';\nimport { resolveEventTimeStamp } from '../helpers/resolveEventTimeStamp';\nimport { resolveEventType } from '../helpers/resolveEventType';\nimport { resolveUpdatePriority } from '../helpers/resolveUpdatePriority';\nimport { setCurrentUpdatePriority } from '../helpers/setCurrentUpdatePriority';\nimport { shouldAttemptEagerTransition } from '../helpers/shouldAttemptEagerTransition';\nimport { shouldSetTextContent } from '../helpers/shouldSetTextContent';\nimport { startSuspendingCommit } from '../helpers/startSuspendingCommit';\nimport { suspendInstance } from '../helpers/suspendInstance';\nimport { trackSchedulerEvent } from '../helpers/trackSchedulerEvent';\nimport { unhideInstance } from '../helpers/unhideInstance';\nimport { unhideTextInstance } from '../helpers/unhideTextInstance';\nimport { waitForCommitToBeReady } from '../helpers/waitForCommitToBeReady';\nimport { type HostConfig } from '../typedefs/HostConfig';\n\nconst reconcilerConfig = {\n    isPrimaryRenderer: false,\n    noTimeout: -1,\n    NotPendingTransition: null,\n    supportsHydration: false,\n    supportsMutation: true,\n    supportsPersistence: false,\n    warnsIfNotActing: false,\n\n    afterActiveInstanceBlur,\n    appendChild,\n    appendChildToContainer: appendChild,\n    appendInitialChild: appendChild,\n    beforeActiveInstanceBlur,\n    cancelTimeout: clearTimeout,\n    clearContainer,\n    commitUpdate,\n    createInstance,\n    createTextInstance,\n    hideTextInstance,\n    unhideTextInstance,\n    detachDeletedInstance,\n    finalizeInitialChildren,\n    getChildHostContext,\n    getCurrentUpdatePriority,\n    getInstanceFromNode,\n    getInstanceFromScope,\n    getPublicInstance,\n    getRootHostContext,\n    hideInstance,\n    insertBefore,\n    insertInContainerBefore: insertBefore,\n    maySuspendCommit,\n    preloadInstance,\n    prepareForCommit,\n    preparePortalMount,\n    prepareScopeUpdate,\n    removeChild,\n    removeChildFromContainer: removeChild,\n    requestPostPaintCallback,\n    resetAfterCommit,\n    resetFormInstance,\n    resolveEventTimeStamp,\n    resolveEventType,\n    resolveUpdatePriority,\n    scheduleTimeout: setTimeout,\n    shouldAttemptEagerTransition,\n    setCurrentUpdatePriority,\n    shouldSetTextContent,\n    startSuspendingCommit,\n    suspendInstance,\n    trackSchedulerEvent,\n    unhideInstance,\n    waitForCommitToBeReady,\n};\n\nconst reconciler = createReconciler<\n    HostConfig['type'],\n    HostConfig['props'],\n    HostConfig['containerInstance'],\n    HostConfig['instance'],\n    HostConfig['textInstance'],\n    HostConfig['suspenseInstance'],\n    HostConfig['hydratableInstance'],\n    HostConfig['formInstance'],\n    HostConfig['publicInstance'],\n    HostConfig['hostContext'],\n    HostConfig['childSet'],\n    HostConfig['timeoutHandle'],\n    HostConfig['noTimeout'],\n    HostConfig['transitionStatus']\n>(reconcilerConfig);\n\nreconciler.injectIntoDevTools({\n    bundleType: process.env.NODE_ENV === 'production' ? 0 : 1,\n    rendererPackageName: '@pixi/react',\n    version: packageData.version,\n});\n\nexport { reconciler };\n"],"names":["afterActiveInstanceBlur","appendChild","beforeActiveInstanceBlur","clearContainer","commitUpdate","createInstance","createTextInstance","hideTextInstance","unhideTextInstance","detachDeletedInstance","finalizeInitialChildren","getChildHostContext","getCurrentUpdatePriority","getInstanceFromNode","getInstanceFromScope","getPublicInstance","getRootHostContext","hideInstance","insertBefore","maySuspendCommit","preloadInstance","prepareForCommit","preparePortalMount","prepareScopeUpdate","removeChild","requestPostPaintCallback","resetAfterCommit","resetFormInstance","resolveEventTimeStamp","resolveEventType","resolveUpdatePriority","shouldAttemptEagerTransition","setCurrentUpdatePriority","shouldSetTextContent","startSuspendingCommit","suspendInstance","trackSchedulerEvent","unhideInstance","waitForCommitToBeReady","createReconciler","packageData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,MAAM,gBAAmB,GAAA;AAAA,EACrB,iBAAmB,EAAA,KAAA;AAAA,EACnB,SAAW,EAAA,CAAA,CAAA;AAAA,EACX,oBAAsB,EAAA,IAAA;AAAA,EACtB,iBAAmB,EAAA,KAAA;AAAA,EACnB,gBAAkB,EAAA,IAAA;AAAA,EAClB,mBAAqB,EAAA,KAAA;AAAA,EACrB,gBAAkB,EAAA,KAAA;AAAA,2BAElBA,+CAAA;AAAA,eACAC,uBAAA;AAAA,EACA,sBAAwB,EAAAA,uBAAA;AAAA,EACxB,kBAAoB,EAAAA,uBAAA;AAAA,4BACpBC,iDAAA;AAAA,EACA,aAAe,EAAA,YAAA;AAAA,kBACfC,6BAAA;AAAA,gBACAC,yBAAA;AAAA,kBACAC,6BAAA;AAAA,sBACAC,qCAAA;AAAA,oBACAC,iCAAA;AAAA,sBACAC,qCAAA;AAAA,yBACAC,2CAAA;AAAA,2BACAC,+CAAA;AAAA,uBACAC,uCAAA;AAAA,4BACAC,iDAAA;AAAA,uBACAC,uCAAA;AAAA,wBACAC,yCAAA;AAAA,qBACAC,mCAAA;AAAA,sBACAC,qCAAA;AAAA,gBACAC,yBAAA;AAAA,gBACAC,yBAAA;AAAA,EACA,uBAAyB,EAAAA,yBAAA;AAAA,oBACzBC,iCAAA;AAAA,mBACAC,+BAAA;AAAA,oBACAC,iCAAA;AAAA,sBACAC,qCAAA;AAAA,sBACAC,qCAAA;AAAA,eACAC,uBAAA;AAAA,EACA,wBAA0B,EAAAA,uBAAA;AAAA,4BAC1BC,iDAAA;AAAA,oBACAC,iCAAA;AAAA,qBACAC,mCAAA;AAAA,yBACAC,2CAAA;AAAA,oBACAC,iCAAA;AAAA,yBACAC,2CAAA;AAAA,EACA,eAAiB,EAAA,UAAA;AAAA,gCACjBC,yDAAA;AAAA,4BACAC,iDAAA;AAAA,wBACAC,yCAAA;AAAA,yBACAC,2CAAA;AAAA,mBACAC,+BAAA;AAAA,uBACAC,uCAAA;AAAA,kBACAC,6BAAA;AAAA,0BACAC;AACJ,CAAA;AAEM,MAAA,UAAA,GAAaC,kCAejB,gBAAgB;AAElB,UAAA,CAAW,kBAAmB,CAAA;AAAA,EAC1B,UAAY,EAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,eAAe,CAAI,GAAA,CAAA;AAAA,EACxD,mBAAqB,EAAA,aAAA;AAAA,EACrB,SAASC,gBAAY,CAAA;AACzB,CAAC,CAAA;;;;"}