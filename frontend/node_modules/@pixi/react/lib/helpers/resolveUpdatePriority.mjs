import { c as constantsExports } from '../node_modules/react-reconciler/constants.mjs';
import { store } from '../store.mjs';
import { log } from './log.mjs';

"use strict";
function resolveUpdatePriority() {
  log("info", "lifecycle::resolveUpdatePriority");
  if (store.currentUpdatePriority) {
    return store.currentUpdatePriority;
  }
  const globalScope = typeof self !== "undefined" && self || typeof window !== "undefined" && window;
  if (!globalScope) {
    return constantsExports.DefaultEventPriority;
  }
  const name = globalScope.event?.type;
  switch (name) {
    case "click":
    case "contextmenu":
    case "dblclick":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
      return constantsExports.DiscreteEventPriority;
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "pointerenter":
    case "pointerleave":
    case "wheel":
      return constantsExports.ContinuousEventPriority;
    default:
      return constantsExports.DefaultEventPriority;
  }
}

export { resolveUpdatePriority };
//# sourceMappingURL=resolveUpdatePriority.mjs.map
